GAS LISTING /tmp/cc5ceD17.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z16userMainExecutorPv
   9              	_Z16userMainExecutorPv:
  10              	.LFB36:
  11              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** #include "../h/print.hpp"
   2:src/main.cpp  **** #include "../h/tcb.hpp"
   3:src/main.cpp  **** #include "../h/riscv.hpp"
   4:src/main.cpp  **** #include "../h/syscall_c.h"
   5:src/main.cpp  **** #include "../h/syscall_cpp.hpp"
   6:src/main.cpp  **** #include "../test/printing.hpp"
   7:src/main.cpp  **** 
   8:src/main.cpp  **** void userMain();
   9:src/main.cpp  **** 
  10:src/main.cpp  **** void userMainExecutor(void*)
  11:src/main.cpp  **** {
  12              		.loc 1 11 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  12:src/main.cpp  ****     userMain();
  22              		.loc 1 12 5
  23              		.loc 1 12 13 is_stmt 0
  24 0010 97000000 		call	_Z8userMainv@plt
  24      E7800000 
  25              	.LVL0:
  13:src/main.cpp  **** }
  26              		.loc 1 13 1
  27 0018 83308100 		ld	ra,8(sp)
  28              		.cfi_restore 1
  29 001c 03340100 		ld	s0,0(sp)
  30              		.cfi_restore 8
  31              		.cfi_def_cfa 2, 16
  32 0020 13010101 		addi	sp,sp,16
  33              		.cfi_def_cfa_offset 0
  34 0024 67800000 		jr	ra
  35              		.cfi_endproc
  36              	.LFE36:
  38              		.align	2
  39              		.globl	main
  41              	main:
  42              	.LFB37:
  14:src/main.cpp  **** 
  15:src/main.cpp  **** int main() {
  43              		.loc 1 15 12 is_stmt 1
  44              		.cfi_startproc
GAS LISTING /tmp/cc5ceD17.s 			page 2


  45 0028 130101FE 		addi	sp,sp,-32
  46              		.cfi_def_cfa_offset 32
  47 002c 233C1100 		sd	ra,24(sp)
  48 0030 23388100 		sd	s0,16(sp)
  49              		.cfi_offset 1, -8
  50              		.cfi_offset 8, -16
  51 0034 13040102 		addi	s0,sp,32
  52              		.cfi_def_cfa 8, 0
  16:src/main.cpp  ****     // Postavi trap handler za prekide
  17:src/main.cpp  ****     Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
  53              		.loc 1 17 5
  54              		.loc 1 17 19 is_stmt 0
  55 0038 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  55      83B70700 
  56              	.LVL1:
  57              	.LBB6:
  58              	.LBB7:
  59              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef OS1_PROJEKAT_RISCV_HPP
   2:src/../h/riscv.hpp **** #define OS1_PROJEKAT_RISCV_HPP
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** #include "../lib/hw.h"
   5:src/../h/riscv.hpp **** class Riscv{
   6:src/../h/riscv.hpp **** public:
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp ****     static void popSppSpie(); //pop-ovanje sstatus.spp i sstatus.spie bitova
   9:src/../h/riscv.hpp ****                             //ne sme da bude inline f-ja
  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp ****     static void pushRegisters();
  12:src/../h/riscv.hpp ****     static void popRegisters();
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     static uint64 r_scause(); //read register scause
  15:src/../h/riscv.hpp ****     static void w_scause(uint64 scause); //write register scouse
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     static uint64 r_sepc(); //read register spec
  18:src/../h/riscv.hpp ****     static void  w_sepc(uint64 ceps); //write register sepc
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     static uint64 r_stvec(); //read register stvec
  21:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec); //write register stvec
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     static uint64 r_stval(); //read register stval
  24:src/../h/riscv.hpp ****     static void w_stval(uint64 stval); //write register stval
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     enum BitMaskSip{
  27:src/../h/riscv.hpp ****         SIP_SSIP = (1 <<1 ),
  28:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  29:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  30:src/../h/riscv.hpp ****     };
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask); //mask set register sip
  33:src/../h/riscv.hpp **** 
  34:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask); //mask clear register sip
  35:src/../h/riscv.hpp **** 
  36:src/../h/riscv.hpp ****     static uint64 r_sip(); //read register sip
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     static void w_sip(uint64 sip); //write regiser sip
  39:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cc5ceD17.s 			page 3


  40:src/../h/riscv.hpp ****     enum BitMaskSstatus{
  41:src/../h/riscv.hpp ****         SSTATUS_SIE= (1 <<1 ),
  42:src/../h/riscv.hpp ****         SSTATUS_STIE = (1 << 5),
  43:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 9),
  44:src/../h/riscv.hpp ****     };
  45:src/../h/riscv.hpp **** 
  46:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask); //mask set register sstatus
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask); //mask clear register sstaus
  49:src/../h/riscv.hpp **** 
  50:src/../h/riscv.hpp ****     static uint64 r_sstatus(); //read register sstatus
  51:src/../h/riscv.hpp **** 
  52:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus); //write regiser sstatus
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     static void supervisorTrap(); //supervisor trap
  55:src/../h/riscv.hpp ****                                 //sta sam procesor zove kada dodje do zahteva za prekidom ili izuze
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp **** private:
  58:src/../h/riscv.hpp **** 
  59:src/../h/riscv.hpp ****     static void handleSupervisorTrap(); //supervisor trap handler
  60:src/../h/riscv.hpp **** 
  61:src/../h/riscv.hpp **** };
  62:src/../h/riscv.hpp **** 
  63:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause() {
  64:src/../h/riscv.hpp ****     uint64 volatile scause;
  65:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  66:src/../h/riscv.hpp ****     return scause;
  67:src/../h/riscv.hpp **** }
  68:src/../h/riscv.hpp **** 
  69:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  70:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  71:src/../h/riscv.hpp **** }
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc() {
  74:src/../h/riscv.hpp ****     uint64 volatile sepc;
  75:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
  76:src/../h/riscv.hpp ****     return sepc;
  77:src/../h/riscv.hpp **** }
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
  80:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
  81:src/../h/riscv.hpp **** }
  82:src/../h/riscv.hpp **** 
  83:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec() {
  84:src/../h/riscv.hpp ****     uint64 volatile stvec;
  85:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
  86:src/../h/riscv.hpp ****     return stvec;
  87:src/../h/riscv.hpp **** }
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
  90:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  60              		.loc 2 90 5 is_stmt 1
  61              		.loc 2 90 69 is_stmt 0
  62              	#APP
  63              	# 90 "src/../h/riscv.hpp" 1
  91              	}
  64              		csrw stvec, a5
GAS LISTING /tmp/cc5ceD17.s 			page 4


  65              	# 0 "" 2
  66              	.LVL2:
  67              	#NO_APP
  68              	.LBE7:
  69              	.LBE6:
  18:src/main.cpp  ****     TCB *main_handle;
  70              		.loc 1 18 5 is_stmt 1
  19:src/main.cpp  ****     thread_create(&main_handle, nullptr, nullptr);
  71              		.loc 1 19 5
  72              		.loc 1 19 18 is_stmt 0
  73 0044 13060000 		li	a2,0
  74 0048 93050000 		li	a1,0
  75 004c 130584FE 		addi	a0,s0,-24
  76 0050 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
  76      E7800000 
  77              	.LVL3:
  20:src/main.cpp  ****     TCB::running = main_handle;
  78              		.loc 1 20 5 is_stmt 1
  79              		.loc 1 20 18 is_stmt 0
  80 0058 97070000 		la	a5,_ZN3TCB7runningE
  80      83B70700 
  81 0060 033784FE 		ld	a4,-24(s0)
  82 0064 23B0E700 		sd	a4,0(a5)
  21:src/main.cpp  ****     thread_t t;
  83              		.loc 1 21 5 is_stmt 1
  22:src/main.cpp  ****     thread_create(&t, userMainExecutor, nullptr);
  84              		.loc 1 22 5
  85              		.loc 1 22 18 is_stmt 0
  86 0068 13060000 		li	a2,0
  87 006c 97050000 		lla	a1,_Z16userMainExecutorPv
  87      93850500 
  88 0074 130504FE 		addi	a0,s0,-32
  89 0078 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
  89      E7800000 
  90              	.LVL4:
  91              	.L5:
  23:src/main.cpp  ****     while(!t->isFinished())
  92              		.loc 1 23 5 is_stmt 1
  93              		.loc 1 23 11
  94              		.loc 1 23 25 is_stmt 0
  95 0080 833704FE 		ld	a5,-32(s0)
  96              	.LVL5:
  97              	.LBB8:
  98              	.LBB9:
  99              		.file 3 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** #ifndef OS1_PROJEKAT_TCB_HPP
   2:src/../h/tcb.hpp **** #define OS1_PROJEKAT_TCB_HPP
   3:src/../h/tcb.hpp **** 
   4:src/../h/tcb.hpp **** #include "scheduler.hpp"
   5:src/../h/tcb.hpp **** #include "../lib/hw.h"
   6:src/../h/tcb.hpp **** 
   7:src/../h/tcb.hpp **** class TCB{
   8:src/../h/tcb.hpp **** public:
   9:src/../h/tcb.hpp ****     using Body = void (*)(void*);
  10:src/../h/tcb.hpp ****     //using Body = void (*)();
  11:src/../h/tcb.hpp **** private:
  12:src/../h/tcb.hpp ****     friend class Riscv;
GAS LISTING /tmp/cc5ceD17.s 			page 5


  13:src/../h/tcb.hpp ****     //friend class Sem; a
  14:src/../h/tcb.hpp **** 
  15:src/../h/tcb.hpp ****     TCB(Body body, void* arg, char *stek) :
  16:src/../h/tcb.hpp ****             body(body),
  17:src/../h/tcb.hpp ****             argumentiFje(arg),
  18:src/../h/tcb.hpp ****             stack(body != nullptr ? stek : nullptr),
  19:src/../h/tcb.hpp ****             context({
  20:src/../h/tcb.hpp ****                             (uint64) &threadWrapper,
  21:src/../h/tcb.hpp ****                             stack != nullptr ? (uint64) &stack[DEFAULT_STACK_SIZE] : 0
  22:src/../h/tcb.hpp ****                     }),
  23:src/../h/tcb.hpp ****             finished(false),
  24:src/../h/tcb.hpp ****             active(true)
  25:src/../h/tcb.hpp ****     {
  26:src/../h/tcb.hpp ****         if(body!=nullptr) Scheduler::put(this);
  27:src/../h/tcb.hpp ****     }
  28:src/../h/tcb.hpp **** 
  29:src/../h/tcb.hpp ****     struct Context{
  30:src/../h/tcb.hpp ****         uint64 ra;
  31:src/../h/tcb.hpp ****         uint64 sp;
  32:src/../h/tcb.hpp ****     };  //a
  33:src/../h/tcb.hpp **** 
  34:src/../h/tcb.hpp ****     Body body;
  35:src/../h/tcb.hpp ****     void* argumentiFje;
  36:src/../h/tcb.hpp ****     char *stack;
  37:src/../h/tcb.hpp ****     Context context;
  38:src/../h/tcb.hpp ****     //uint64 timeSlice;
  39:src/../h/tcb.hpp ****     volatile bool finished;
  40:src/../h/tcb.hpp ****     bool  active;
  41:src/../h/tcb.hpp ****     //static uint64 timeSliceCounter;
  42:src/../h/tcb.hpp ****     static void threadWrapper();
  43:src/../h/tcb.hpp **** 
  44:src/../h/tcb.hpp **** 
  45:src/../h/tcb.hpp **** public:
  46:src/../h/tcb.hpp ****     ~TCB(){ delete[] stack; }
  47:src/../h/tcb.hpp **** 
  48:src/../h/tcb.hpp ****     //static TCB* createNewTCB(Body body, void* args, void* stack);
  49:src/../h/tcb.hpp **** 
  50:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
 100              		.loc 3 50 31 is_stmt 1
 101              		.loc 3 50 38 is_stmt 0
 102 0084 83C78702 		lbu	a5,40(a5)
 103              	.LVL6:
 104 0088 93F7F70F 		andi	a5,a5,0xff
 105              	.LVL7:
 106              	.LBE9:
 107              	.LBE8:
 108              		.loc 1 23 11
 109 008c 63980700 		bnez	a5,.L4
  24:src/main.cpp  ****     {
  25:src/main.cpp  ****         thread_dispatch();
 110              		.loc 1 25 9 is_stmt 1
 111              		.loc 1 25 24 is_stmt 0
 112 0090 97000000 		call	_Z15thread_dispatchv@plt
 112      E7800000 
 113              	.LVL8:
 114 0098 6FF09FFE 		j	.L5
 115              	.L4:
GAS LISTING /tmp/cc5ceD17.s 			page 6


  26:src/main.cpp  ****     }
  27:src/main.cpp  ****     return 0;
 116              		.loc 1 27 5 is_stmt 1
  28:src/main.cpp  **** }...
 117              		.loc 1 28 1 is_stmt 0
 118 009c 13050000 		li	a0,0
 119 00a0 83308101 		ld	ra,24(sp)
 120              		.cfi_restore 1
 121 00a4 03340101 		ld	s0,16(sp)
 122              		.cfi_restore 8
 123              		.cfi_def_cfa 2, 32
 124 00a8 13010102 		addi	sp,sp,32
 125              		.cfi_def_cfa_offset 0
 126 00ac 67800000 		jr	ra
 127              		.cfi_endproc
 128              	.LFE37:
 130              	.Letext0:
 131              		.file 4 "src/../h/../lib/hw.h"
 132              		.file 5 "src/../h/syscall_c.h"
GAS LISTING /tmp/cc5ceD17.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/cc5ceD17.s:9      .text:0000000000000000 _Z16userMainExecutorPv
     /tmp/cc5ceD17.s:13     .text:0000000000000000 .L0 
     /tmp/cc5ceD17.s:14     .text:0000000000000000 .L0 
     /tmp/cc5ceD17.s:15     .text:0000000000000004 .L0 
     /tmp/cc5ceD17.s:18     .text:000000000000000c .L0 
     /tmp/cc5ceD17.s:19     .text:000000000000000c .L0 
     /tmp/cc5ceD17.s:21     .text:0000000000000010 .L0 
     /tmp/cc5ceD17.s:23     .text:0000000000000010 .L0 
     /tmp/cc5ceD17.s:24     .text:0000000000000010 .L0 
     /tmp/cc5ceD17.s:27     .text:0000000000000018 .L0 
     /tmp/cc5ceD17.s:28     .text:000000000000001c .L0 
     /tmp/cc5ceD17.s:30     .text:0000000000000020 .L0 
     /tmp/cc5ceD17.s:31     .text:0000000000000020 .L0 
     /tmp/cc5ceD17.s:33     .text:0000000000000024 .L0 
     /tmp/cc5ceD17.s:35     .text:0000000000000028 .L0 
     /tmp/cc5ceD17.s:41     .text:0000000000000028 main
     /tmp/cc5ceD17.s:44     .text:0000000000000028 .L0 
     /tmp/cc5ceD17.s:45     .text:0000000000000028 .L0 
     /tmp/cc5ceD17.s:46     .text:000000000000002c .L0 
     /tmp/cc5ceD17.s:49     .text:0000000000000034 .L0 
     /tmp/cc5ceD17.s:50     .text:0000000000000034 .L0 
     /tmp/cc5ceD17.s:52     .text:0000000000000038 .L0 
     /tmp/cc5ceD17.s:54     .text:0000000000000038 .L0 
     /tmp/cc5ceD17.s:55     .text:0000000000000038 .L0 
     /tmp/cc5ceD17.s:61     .text:0000000000000040 .L0 
  src/../h/riscv.hpp:90     .text:0000000000000040 .L0 
     /tmp/cc5ceD17.s:71     .text:0000000000000044 .L0 
     /tmp/cc5ceD17.s:72     .text:0000000000000044 .L0 
     /tmp/cc5ceD17.s:73     .text:0000000000000044 .L0 
     /tmp/cc5ceD17.s:79     .text:0000000000000058 .L0 
     /tmp/cc5ceD17.s:80     .text:0000000000000058 .L0 
     /tmp/cc5ceD17.s:84     .text:0000000000000068 .L0 
     /tmp/cc5ceD17.s:85     .text:0000000000000068 .L0 
     /tmp/cc5ceD17.s:86     .text:0000000000000068 .L0 
     /tmp/cc5ceD17.s:93     .text:0000000000000080 .L0 
     /tmp/cc5ceD17.s:94     .text:0000000000000080 .L0 
     /tmp/cc5ceD17.s:95     .text:0000000000000080 .L0 
     /tmp/cc5ceD17.s:101    .text:0000000000000084 .L0 
     /tmp/cc5ceD17.s:102    .text:0000000000000084 .L0 
     /tmp/cc5ceD17.s:109    .text:000000000000008c .L0 
     /tmp/cc5ceD17.s:111    .text:0000000000000090 .L0 
     /tmp/cc5ceD17.s:112    .text:0000000000000090 .L0 
     /tmp/cc5ceD17.s:117    .text:000000000000009c .L0 
     /tmp/cc5ceD17.s:118    .text:000000000000009c .L0 
     /tmp/cc5ceD17.s:120    .text:00000000000000a4 .L0 
     /tmp/cc5ceD17.s:122    .text:00000000000000a8 .L0 
     /tmp/cc5ceD17.s:123    .text:00000000000000a8 .L0 
     /tmp/cc5ceD17.s:125    .text:00000000000000ac .L0 
     /tmp/cc5ceD17.s:127    .text:00000000000000b0 .L0 
     /tmp/cc5ceD17.s:133    .text:00000000000000b0 .L0 
     /tmp/cc5ceD17.s:55     .text:0000000000000038 .L0 
     /tmp/cc5ceD17.s:80     .text:0000000000000058 .L0 
     /tmp/cc5ceD17.s:87     .text:000000000000006c .L0 
     /tmp/cc5ceD17.s:115    .text:000000000000009c .L4
     /tmp/cc5ceD17.s:91     .text:0000000000000080 .L5
GAS LISTING /tmp/cc5ceD17.s 			page 8


     /tmp/cc5ceD17.s:882    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc5ceD17.s:1845   .debug_str:0000000000000557 .LASF95
     /tmp/cc5ceD17.s:1763   .debug_str:0000000000000304 .LASF96
     /tmp/cc5ceD17.s:1869   .debug_str:00000000000006c3 .LASF97
     /tmp/cc5ceD17.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc5ceD17.s:130    .text:00000000000000b0 .Letext0
     /tmp/cc5ceD17.s:1659   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc5ceD17.s:1785   .debug_str:00000000000003b9 .LASF0
     /tmp/cc5ceD17.s:1795   .debug_str:00000000000003e2 .LASF1
     /tmp/cc5ceD17.s:1775   .debug_str:0000000000000360 .LASF2
     /tmp/cc5ceD17.s:1751   .debug_str:00000000000002cf .LASF4
     /tmp/cc5ceD17.s:1827   .debug_str:00000000000004cd .LASF3
     /tmp/cc5ceD17.s:1685   .debug_str:0000000000000091 .LASF5
     /tmp/cc5ceD17.s:1799   .debug_str:0000000000000416 .LASF6
     /tmp/cc5ceD17.s:1783   .debug_str:00000000000003a6 .LASF7
     /tmp/cc5ceD17.s:1849   .debug_str:000000000000062a .LASF8
     /tmp/cc5ceD17.s:1741   .debug_str:0000000000000253 .LASF9
     /tmp/cc5ceD17.s:1811   .debug_str:0000000000000450 .LASF10
     /tmp/cc5ceD17.s:1847   .debug_str:000000000000061b .LASF11
     /tmp/cc5ceD17.s:1691   .debug_str:00000000000000c5 .LASF12
     /tmp/cc5ceD17.s:1669   .debug_str:0000000000000042 .LASF13
     /tmp/cc5ceD17.s:1699   .debug_str:000000000000010f .LASF14
     /tmp/cc5ceD17.s:1823   .debug_str:000000000000049f .LASF15
     /tmp/cc5ceD17.s:1705   .debug_str:0000000000000132 .LASF16
     /tmp/cc5ceD17.s:1675   .debug_str:0000000000000065 .LASF98
     /tmp/cc5ceD17.s:1855   .debug_str:000000000000065d .LASF99
     /tmp/cc5ceD17.s:1819   .debug_str:000000000000048f .LASF100
     /tmp/cc5ceD17.s:1755   .debug_str:00000000000002df .LASF17
     /tmp/cc5ceD17.s:1765   .debug_str:0000000000000311 .LASF18
     /tmp/cc5ceD17.s:1791   .debug_str:00000000000003d6 .LASF19
     /tmp/cc5ceD17.s:1759   .debug_str:00000000000002ef .LASF20
     /tmp/cc5ceD17.s:1753   .debug_str:00000000000002d6 .LASF21
     /tmp/cc5ceD17.s:1703   .debug_str:000000000000012b .LASF22
     /tmp/cc5ceD17.s:1771   .debug_str:0000000000000348 .LASF80
     /tmp/cc5ceD17.s:1745   .debug_str:0000000000000277 .LASF82
     /tmp/cc5ceD17.s:1713   .debug_str:000000000000018c .LASF23
     /tmp/cc5ceD17.s:1817   .debug_str:0000000000000483 .LASF25
     /tmp/cc5ceD17.s:1801   .debug_str:0000000000000429 .LASF27
     /tmp/cc5ceD17.s:1739   .debug_str:000000000000023c .LASF29
     /tmp/cc5ceD17.s:1777   .debug_str:000000000000036e .LASF24
     /tmp/cc5ceD17.s:1747   .debug_str:0000000000000290 .LASF26
     /tmp/cc5ceD17.s:1673   .debug_str:000000000000005b .LASF28
     /tmp/cc5ceD17.s:1735   .debug_str:0000000000000221 .LASF30
     /tmp/cc5ceD17.s:1773   .debug_str:0000000000000356 .LASF31
     /tmp/cc5ceD17.s:1767   .debug_str:000000000000031e .LASF32
     /tmp/cc5ceD17.s:1761   .debug_str:00000000000002f7 .LASF33
     /tmp/cc5ceD17.s:1781   .debug_str:0000000000000384 .LASF34
     /tmp/cc5ceD17.s:1719   .debug_str:00000000000001b5 .LASF101
     /tmp/cc5ceD17.s:1789   .debug_str:00000000000003cd .LASF38
     /tmp/cc5ceD17.s:1725   .debug_str:00000000000001d9 .LASF40
     /tmp/cc5ceD17.s:1853   .debug_str:000000000000064f .LASF102
     /tmp/cc5ceD17.s:1749   .debug_str:00000000000002a7 .LASF103
     /tmp/cc5ceD17.s:1803   .debug_str:0000000000000434 .LASF35
     /tmp/cc5ceD17.s:1727   .debug_str:00000000000001ec .LASF36
     /tmp/cc5ceD17.s:1793   .debug_str:00000000000003dc .LASF37
     /tmp/cc5ceD17.s:1821   .debug_str:0000000000000494 .LASF39
     /tmp/cc5ceD17.s:1861   .debug_str:000000000000068b .LASF41
GAS LISTING /tmp/cc5ceD17.s 			page 9


     /tmp/cc5ceD17.s:1683   .debug_str:0000000000000083 .LASF42
     /tmp/cc5ceD17.s:1717   .debug_str:000000000000019a .LASF43
     /tmp/cc5ceD17.s:1837   .debug_str:000000000000051e .LASF44
     /tmp/cc5ceD17.s:1665   .debug_str:0000000000000011 .LASF45
     /tmp/cc5ceD17.s:1671   .debug_str:0000000000000052 .LASF47
     /tmp/cc5ceD17.s:1835   .debug_str:0000000000000509 .LASF49
     /tmp/cc5ceD17.s:1715   .debug_str:0000000000000191 .LASF46
     /tmp/cc5ceD17.s:1689   .debug_str:00000000000000b0 .LASF52
     /tmp/cc5ceD17.s:1829   .debug_str:00000000000004df .LASF48
     /tmp/cc5ceD17.s:1815   .debug_str:0000000000000470 .LASF50
     /tmp/cc5ceD17.s:1843   .debug_str:0000000000000550 .LASF51
     /tmp/cc5ceD17.s:1839   .debug_str:000000000000052b .LASF53
     /tmp/cc5ceD17.s:1733   .debug_str:0000000000000219 .LASF54
     /tmp/cc5ceD17.s:1707   .debug_str:0000000000000148 .LASF55
     /tmp/cc5ceD17.s:1663   .debug_str:0000000000000009 .LASF56
     /tmp/cc5ceD17.s:1831   .debug_str:00000000000004e6 .LASF57
     /tmp/cc5ceD17.s:1721   .debug_str:00000000000001bd .LASF58
     /tmp/cc5ceD17.s:1693   .debug_str:00000000000000d5 .LASF59
     /tmp/cc5ceD17.s:1867   .debug_str:00000000000006bb .LASF60
     /tmp/cc5ceD17.s:1723   .debug_str:00000000000001c5 .LASF61
     /tmp/cc5ceD17.s:1787   .debug_str:00000000000003c6 .LASF62
     /tmp/cc5ceD17.s:1857   .debug_str:0000000000000673 .LASF63
     /tmp/cc5ceD17.s:1681   .debug_str:000000000000007c .LASF64
     /tmp/cc5ceD17.s:1731   .debug_str:0000000000000206 .LASF65
     /tmp/cc5ceD17.s:1737   .debug_str:0000000000000236 .LASF66
     /tmp/cc5ceD17.s:1841   .debug_str:000000000000053e .LASF67
     /tmp/cc5ceD17.s:1679   .debug_str:0000000000000076 .LASF68
     /tmp/cc5ceD17.s:1871   .debug_str:00000000000006ed .LASF69
     /tmp/cc5ceD17.s:1865   .debug_str:00000000000006b0 .LASF70
     /tmp/cc5ceD17.s:1825   .debug_str:00000000000004b5 .LASF71
     /tmp/cc5ceD17.s:1757   .debug_str:00000000000002e4 .LASF72
     /tmp/cc5ceD17.s:1687   .debug_str:0000000000000098 .LASF73
     /tmp/cc5ceD17.s:1697   .debug_str:0000000000000105 .LASF74
     /tmp/cc5ceD17.s:1769   .debug_str:0000000000000332 .LASF75
     /tmp/cc5ceD17.s:1779   .debug_str:000000000000037a .LASF76
     /tmp/cc5ceD17.s:1743   .debug_str:0000000000000261 .LASF77
     /tmp/cc5ceD17.s:1833   .debug_str:00000000000004fa .LASF78
     /tmp/cc5ceD17.s:1695   .debug_str:00000000000000e9 .LASF79
     /tmp/cc5ceD17.s:1851   .debug_str:000000000000063a .LASF81
     /tmp/cc5ceD17.s:1711   .debug_str:000000000000016a .LASF83
     /tmp/cc5ceD17.s:1661   .debug_str:0000000000000000 .LASF84
     /tmp/cc5ceD17.s:1807   .debug_str:000000000000043f .LASF85
     /tmp/cc5ceD17.s:42     .text:0000000000000028 .LFB37
     /tmp/cc5ceD17.s:128    .text:00000000000000b0 .LFE37
     /tmp/cc5ceD17.s:1809   .debug_str:0000000000000444 .LASF86
     /tmp/cc5ceD17.s:57     .text:0000000000000040 .LBB6
     /tmp/cc5ceD17.s:69     .text:0000000000000044 .LBE6
     /tmp/cc5ceD17.s:97     .text:0000000000000084 .LBB8
     /tmp/cc5ceD17.s:107    .text:000000000000008c .LBE8
     /tmp/cc5ceD17.s:1634   .debug_loc:0000000000000000 .LLST0
     /tmp/cc5ceD17.s:77     .text:0000000000000058 .LVL3
     /tmp/cc5ceD17.s:90     .text:0000000000000080 .LVL4
     /tmp/cc5ceD17.s:113    .text:0000000000000098 .LVL8
     /tmp/cc5ceD17.s:1813   .debug_str:000000000000045f .LASF87
     /tmp/cc5ceD17.s:1667   .debug_str:000000000000002b .LASF88
     /tmp/cc5ceD17.s:10     .text:0000000000000000 .LFB36
     /tmp/cc5ceD17.s:36     .text:0000000000000028 .LFE36
GAS LISTING /tmp/cc5ceD17.s 			page 10


     /tmp/cc5ceD17.s:25     .text:0000000000000018 .LVL0
     /tmp/cc5ceD17.s:1805   .debug_str:0000000000000439 .LASF104
     /tmp/cc5ceD17.s:1859   .debug_str:0000000000000686 .LASF105
     /tmp/cc5ceD17.s:1797   .debug_str:00000000000003f5 .LASF89
     /tmp/cc5ceD17.s:1709   .debug_str:000000000000015c .LASF91
     /tmp/cc5ceD17.s:1729   .debug_str:00000000000001f1 .LASF90
     /tmp/cc5ceD17.s:1701   .debug_str:000000000000011b .LASF92
     /tmp/cc5ceD17.s:1863   .debug_str:00000000000006a3 .LASF93
     /tmp/cc5ceD17.s:1677   .debug_str:000000000000006d .LASF94
     /tmp/cc5ceD17.s:96     .text:0000000000000084 .LVL5
     /tmp/cc5ceD17.s:103    .text:0000000000000088 .LVL6
     /tmp/cc5ceD17.s:105    .text:000000000000008c .LVL7
     /tmp/cc5ceD17.s:134    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_Z8userMainv
_ZN5Riscv14supervisorTrapEv
_Z13thread_createPP3TCBPFvPvES2_
_ZN3TCB7runningE
_Z15thread_dispatchv
